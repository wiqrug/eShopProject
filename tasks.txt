Using the previous objects of Candidate and Certificate you are required to produce a database schema that will be able to produce results for the following questions:



    • A list of all the Candidates											DONE



    • Produce a query that creates a new Candidate									DONE
    • Produce a query that updates the details of a Candidate								DONE
    • A list of all the Certificates											DONE



	se olous tous candidates created at										DONE
	se ola ta certificates created at										DONE
	se ola ta candidate certificates created at									DONE	

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

TODO SERVICES

Split these tasks to each person in the team 

    • A list of all the obtained Certificates of a Candidate								//Kwnstantinos	DONE,meaning that score is over 50
    • A list of all the Certificates of a Candidate that did not obtain							//He bought the Certificate but didnt complete - Agis
    • A list of all the Certificates a Candidate can acquire								//Update in order to not purchase already purchased Nondas
    • A list of all the marks per Topic per Certificate a Candidate has sat for						//Giannis
    • A list of all the Certificates that were obtained by date								//Giorgos	//Certificate was bought and completed that day //Show a calendar



    • Count of the Passed / Failed Certificates per date range								//Alekos	DONE

    -------------------------------------------------------------------------------------------------------------------------

    4/1/2024  NewTasks

    -- API gia candidates na kanei update kai sta null pedia na krataei ta palia ++

-- sto candidateCerificatesController  to action getMarksPerExamPerCertificate  export ti logiki se service ++

-- elenxos apo to header me to token mas

-- accountController diaxwrismos ++

-- builder.Services.AddScope sto program gia to accountServices ++

-- Encapsulation sto Marker qualityControl admin kai Candidates +

-- Create repository fakelos kainourgios create function for every duplicated code   [!!!!] inject to application dbcontext  (isws addservice sto addscope)

-- IServices impliment to Interface kai IService mesa ston constractor +

-- properties ston Certificate public string Description kai int Price +++

-- sta exams properties : xronos , title ++

-- pinakas questions(prop:string question, strin answer A, answer B, answer C , answer D, correctAnswer, examID[foreign])  +navigation property   
many to one exam( anapoda)  dld: ena exam mporei na exei polla questions+++

-- Na apothikeuoume to Date otan ena Certificate ginetai obtained me elenxo an einai obtained to Certificate

-- Initialize to data to Tables.


